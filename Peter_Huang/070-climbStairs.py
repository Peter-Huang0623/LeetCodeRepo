class Solution(object):
    def climbStairs(self, n):
        l = [2,3]
        if n == 1:
            return 1
        if n == 2:
            return 2
        if n == 3:
            return 3
        for i in range(0, n - 3):
            l.append(l[-1] + l[-2])
        return l[-1]


if __name__ == '__main__':
    s = Solution()
    for i in range(2,20):
        print('如果有', i, '步阶梯'+'共有', s.climbStairs(i), '种走法')
    res = s.climbStairs(10)
    print(res)
# 1 2 3 5 8 13 21 34 （前两项相加等于后一项）

# 仔细观察发现数据是有规律的

# 如果有 2 步阶梯共有 2 种走法
# 如果有 3 步阶梯共有 3 种走法
# 如果有 4 步阶梯共有 5 种走法
# 如果有 5 步阶梯共有 8 种走法
# 如果有 6 步阶梯共有 13 种走法
# 如果有 7 步阶梯共有 21 种走法
# 如果有 8 步阶梯共有 34 种走法
# 如果有 9 步阶梯共有 55 种走法
# 如果有 10 步阶梯共有 89 种走法
# 如果有 11 步阶梯共有 144 种走法
# 如果有 12 步阶梯共有 233 种走法
# 如果有 13 步阶梯共有 377 种走法
# 如果有 14 步阶梯共有 610 种走法
# 如果有 15 步阶梯共有 987 种走法
# 如果有 16 步阶梯共有 1597 种走法
# 如果有 17 步阶梯共有 2584 种走法
# 如果有 18 步阶梯共有 4181 种走法
# 如果有 19 步阶梯共有 6765 种走法