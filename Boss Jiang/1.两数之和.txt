####±éÀú  224ms###
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        vector<int> res;
        int len=nums.size();
        for(int i=0;i<len;i++){
            for(int j=i+1;j<len;j++){
                if(nums[i]+nums[j]==target){
                        res.push_back(i);
                        res.push_back(j);
                        return res;
                }               
            }           
        }
        return res;
    }
};

####hash  16ms####
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int,int> m;
        vector<int> res;
        int len = nums.size();
        for(int i=0;i<len;i++){
            m[nums[i]]=i;
        }
        for(int i=0;i<len;i++){
            int s=target-nums[i];
            if(m.count(s) &&  m[s]!=i){
                res.push_back(i);
                res.push_back(m[s]);
                return res;
            }
        }
        return res;
    }
};