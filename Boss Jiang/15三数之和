#264ms  用map去重

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>  res;
        map<vector<int>,int> _map;
        int n =nums.size();
        sort(nums.begin(),nums.begin()+n);
        for(int i=0;i<n;i++){
            if(i==0 || nums[i]>nums[i-1]){
                int j=i+1;
                int k=n-1;
                while(j<k){
                    if(nums[i]+nums[j]+nums[k]==0){
                        vector<int> vec;
                        vec.push_back(nums[i]);
                        vec.push_back(nums[j]);
                        vec.push_back(nums[k]);
                        if(_map.find(vec)==_map.end()){
                            _map[vec]=1;
                            res.push_back(vec);
                        }
                        j++;
                        k--;
                    }
                    else if(nums[i]+nums[j]+nums[k]>0)
                        k--;
                    else
                        j++; 
            }
         }
        }
        return res;
    }
};

# 180ms  不用map去重
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>  res;
        int n =nums.size();
        sort(nums.begin(),nums.begin()+n);
        for(int i=0;i<n;i++){
            if(i==0 || nums[i]>nums[i-1]){
                int j=i+1;
                int k=n-1;
                while(j<k){
                    int a=nums[i]+nums[j]+nums[k];
                    if(a==0){
                        vector<int> vec;
                        vec.push_back(nums[i]);
                        vec.push_back(nums[j]);
                        vec.push_back(nums[k]);
                        res.push_back(vec);
                        j++;
                        k--;
                        while(j<k && nums[j]==nums[j-1])
                            j++;
                        while(j<k && nums[k]==nums[k+1])
                            k--;
                    }
                    else if(a>0)
                        k--;
                    else
                        j++; 
               }
         }
        }
        return res;
    }
};


#160ms 最后优化版本

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>>  res;
        int n =nums.size();
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            if(i==0 || nums[i]>nums[i-1]){
                int j=i+1;
                int k=n-1;
                while(j<k){
                    if(nums[i]+nums[j]+nums[k]==0){
                        res.push_back({nums[i],nums[j],nums[k]});
                        j++;
                        k--;
                        while(j<k && nums[j]==nums[j-1])
                            j++;
                        while(j<k && nums[k]==nums[k+1])
                            k--;
                    }
                    else if(nums[i]+nums[j]+nums[k]>0)
                        k--;
                    else
                        j++; 
               }
         }
        }
        return res;
    }
};